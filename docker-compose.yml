networks:
  velo-cation:
    driver: bridge

services:
  postgresql:
    image: postgres:alpine3.18
    restart: on-failure
    environment:
      POSTGRES_DB: velo-cation
      POSTGRES_USER: student
      POSTGRES_PASSWORD: secret
    volumes:
      - postgresql-data:/var/lib/postgresql/data
      - ./docker-configuration/postgresql/01-structure.sql:/docker-entrypoint-initdb.d/01-structure.sql
      - ./docker-configuration/postgresql/02-data.sql:/docker-entrypoint-initdb.d/02-data.sql
    networks:
      - velo-cation

  mongo:
    image: mongo
    restart: on-failure
    volumes:
      - mongo-data:/data/db
      - ./docker-configuration/mongo/init.js:/docker-entrypoint-initdb.d/init.js
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
      MONGO_INITDB_DATABASE: velo-thentication
    networks:
      - velo-cation

  apollo-server:
    build:
      context: .
      dockerfile: docker-configuration/apollo-server/Dockerfile
    restart: on-failure
    volumes:
      - ./apollo-server:/app/apollo-server
      - /app/apollo-server/node_modules
    networks:
      - velo-cation
    ports:
      - "4005:4005"
    expose:
      - "4005"
    environment:
      PORT: 4005
      POSTGRES_DB: velo-cation
      POSTGRES_USER: student
      POSTGRES_PASSWORD: secret
      POSTGRES_HOST: postgresql
      POSTGRES_PORT: 5432
      JWT_SECRET: jwt-secret
    depends_on:
      - postgresql

  authentication:
    image: node:lts-alpine3.18
    restart: on-failure
    volumes:
      - ./authentication:/app/authentication
    ports:
      - "4015:4015"
    expose:
      - "4015"
    environment:
      BASE_URL: http://localhost
      PORT: 4015
      JWT_SECRET: jwt-secret
      MONGO_URL: mongodb://student:secret@mongo:27017/velo-thentication
    working_dir: /app/authentication
    entrypoint: [ "/bin/sh", "-c" , "npm install && npm run dev --host 0.0.0.0" ]
    networks:
      - velo-cation
    depends_on:
      - mongo

  vue:
    build:
      context: .
      dockerfile: docker-configuration/vue/Dockerfile
      args:
        GRAPHQL_URI: http://localhost:4005/graphql
    restart: on-failure
    ports:
      - "5173:5173"
    volumes:
      - ./vue:/app/vue
      - /app/vue/node_modules
    networks:
      - velo-cation
    depends_on:
      - apollo-server
      - postgresql
      - authentication
      - mongo

  mongo-express:
    image: mongo-express
    restart: on-failure
    ports:
      - "8081:8081"
    expose:
      - "8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: secret
      ME_CONFIG_MONGODB_URL: mongodb://root:secret@mongo:27017/
    networks:
      - velo-cation
    depends_on:
      - mongo


  adminer:
    build:
      context: .
      dockerfile: docker-configuration/adminer/Dockerfile
    ports:
      - "8080:8080"
    networks:
      - velo-cation
    depends_on:
      - postgresql

volumes:
  postgresql-data:
  mongo-data: